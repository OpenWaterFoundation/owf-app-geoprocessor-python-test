StartLog(LogFile="results/test-If-float.gp.log")
# Test evaluating float conditions in various combinations
SetProperty(PropertyName="DoubleProperty1",PropertyType="float",PropertyValue="1")
SetProperty(PropertyName="DoubleProperty0",PropertyType="float",PropertyValue="0")
# <
If(Name="Check_Double_0_LT_Property1",Condition="0.0 < ${DoubleProperty1}")
  SetProperty(PropertyName="Double_0_LT_Property1_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="0.0 is < ${DoubleProperty1}")
EndIf(Name="Check_Double_0_LT_Property1")
If(Name="Check_Double_0_LT_Property0",Condition="0.0 < ${DoubleProperty0}")
  SetProperty(PropertyName="Double_0_LT_Property0_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="0.0 is < ${DoubleProperty0}")
EndIf(Name="Check_Double_0_LT_Property0")
If(Name="Check_Double_0_LT_1",Condition="0.0 < 1.0")
  SetProperty(PropertyName="Double_0_LT_1_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="0.0 is < 1.0")
EndIf(Name="Check_Double_0_LT_1")
If(Name="Check_Double_0_LT_0",Condition="0.0 < 0.0")
  SetProperty(PropertyName="Double_0_LT_0_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="0.0 is < 0.0")
EndIf(Name="Check_Double_0_LT_0")
# <=
If(Name="Check_Double_0_LE_Property1",Condition="0.0 <= ${DoubleProperty1}")
  SetProperty(PropertyName="Double_0_LE_Property1_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="0.0 is <= ${DoubleProperty1}")
EndIf(Name="Check_Double_0_LE_Property1")
If(Name="Check_Double_0_LE_Property0",Condition="0.0 <= ${DoubleProperty0}")
  SetProperty(PropertyName="Double_0_LE_Property0_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="0.0 is <= ${DoubleProperty0}")
EndIf(Name="Check_Double_0_LE_Property0")
If(Name="Check_Double_0_LE_1",Condition="0.0 <= 1.0")
  SetProperty(PropertyName="Double_0_LE_1_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="0.0 is <= 1.0")
EndIf(Name="Check_Double_0_LE_1")
If(Name="Check_Double_0_LE_0",Condition="0.0 <= 0.0")
  SetProperty(PropertyName="Double_0_LE_0_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="0.0 is <= 0.0")
EndIf(Name="Check_Double_0_LE_0")
# >
If(Name="Check_Double_1_GT_Property0",Condition="1.0 > ${DoubleProperty0}")
  SetProperty(PropertyName="Double_1_GT_Property0_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="1.0 is > ${DoubleProperty0}")
EndIf(Name="Check_Double_1_GT_Property0")
If(Name="Check_Double_1_GT_Property1",Condition="1.0 > ${DoubleProperty1}")
  SetProperty(PropertyName="Double_1_GT_Property1_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="1.0 is > ${DoubleProperty1}")
EndIf(Name="Check_Double_1_GT_Property1")
If(Name="Check_Double_1_GT_0",Condition="1.0 > 0.0")
  SetProperty(PropertyName="Double_1_GT_0_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="1.0 is > 0.0")
EndIf(Name="Check_Double_1_GT_0")
If(Name="Check_Double_1_GT_1",Condition="1.0 > 1.0")
  SetProperty(PropertyName="Double_1_GT_1_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="1.0 is > 1.0")
EndIf(Name="Check_Double_1_GT_1")
# >=
If(Name="Check_Double_1_GE_Property0",Condition="1.0 >= ${DoubleProperty0}")
  SetProperty(PropertyName="Double_1_GE_Property0_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="1.0 is >= ${DoubleProperty0}")
EndIf(Name="Check_Double_1_GE_Property0")
If(Name="Check_Double_1_GE_Property1",Condition="1.0 >= ${DoubleProperty1}")
  SetProperty(PropertyName="Double_1_GE_Property1_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="1.0 is >= ${DoubleProperty1}")
EndIf(Name="Check_Double_1_GE_Property1")
If(Name="Check_Double_1_GE_0",Condition="1.0 >= 0.0")
  SetProperty(PropertyName="Double_1_GE_0_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="1.0 is >= 0.0")
EndIf(Name="Check_Double_1_GE_0")
If(Name="Check_Double_1_GE_1",Condition="1.0 >= 1.0")
  SetProperty(PropertyName="Double_1_GE_1_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="1.0 is >= True")
EndIf(Name="Check_Double_1_GE_1")
# ==
If(Name="Check_Double_1_EQ_Property1",Condition="1.0 == ${DoubleProperty1}")
  SetProperty(PropertyName="Double_1_EQ_Property1_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="1.0 is == ${DoubleProperty1}")
EndIf(Name="Check_Double_1_EQ_Property1")
If(Name="Check_Double_1_EQ_Property0",Condition="1.0 == ${DoubleProperty0}")
  SetProperty(PropertyName="Double_1_EQ_Property0_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="1.0 == ${DoubleProperty0}")
EndIf(Name="Check_Double_1_EQ_Property0")
If(Name="Check_Double_1_EQ_1",Condition="1.0 == 1.0")
  SetProperty(PropertyName="Double_1_EQ_1_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="1.0 is == 1.0")
EndIf(Name="Check_Double_1_EQ_1")
If(Name="Check_Double_1_EQ_0",Condition="1.0 == 0.0")
  SetProperty(PropertyName="Double_1_EQ_0_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="1.0 == 0.0")
EndIf(Name="Check_Double_1_EQ_0")
# !=
If(Name="Check_Double_1_NE_Property1",Condition="1.0 != ${DoubleProperty1}")
  SetProperty(PropertyName="Double_1_NE_Property1_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="1.0 is != ${DoubleProperty1}")
EndIf(Name="Check_Double_1_NE_Property1")
If(Name="Check_Double_1_NE_Property0",Condition="1.0 != ${DoubleProperty0}")
  SetProperty(PropertyName="Double_1_NE_Property0_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="1.0 != ${DoubleProperty0}")
EndIf(Name="Check_Double_1_NE_Property0")
If(Name="Check_Double_1_NE_1",Condition="1.0 != 1.0")
  SetProperty(PropertyName="Double_1_NE_1_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="1.0 is != 1.0")
EndIf(Name="Check_Double_1_NE_1")
If(Name="Check_Double_1_NE_0",Condition="1.0 != 0.0")
  SetProperty(PropertyName="Double_1_NE_0_Test",PropertyType="bool",PropertyValue="True")
  Message(Message="1.0 != 0.0")
EndIf(Name="Check_Double_1_NE_0")
# Uncomment the next command to regenerate expected results
#WritePropertiesToFile(OutputFile="expected-results/test-If-float-out.txt",IncludeProperties="Double_*_Test",SortOrder="Ascending")
WritePropertiesToFile(OutputFile="results/test-If-float-out.txt",IncludeProperties="Double_*_Test",SortOrder="Ascending")
CompareFiles(InputFile1="expected-results/test-If-float-out.txt",InputFile2="results/test-If-float-out.txt",IfDifferent="Warn")
